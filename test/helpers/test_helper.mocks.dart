// Mocks generated by Mockito 5.4.2 from annotations
// in botrick/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:botrick/core/usecase/usecase.dart' as _i11;
import 'package:botrick/core/utils/failure.dart' as _i6;
import 'package:botrick/features/chat/data/datasource/chat_datasource.dart'
    as _i8;
import 'package:botrick/features/chat/data/models/message.dart' as _i7;
import 'package:botrick/features/chat/domain/repository/chat_repository.dart'
    as _i3;
import 'package:botrick/features/chat/domain/usecase/send_message.dart' as _i10;
import 'package:botrick/features/image_generator/data/datasource/image_generator_datasource.dart'
    as _i9;
import 'package:botrick/features/image_generator/domain/repository/image_generator_repository.dart'
    as _i4;
import 'package:botrick/features/image_generator/domain/usecase/generate_image.dart'
    as _i12;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatRepository_1 extends _i1.SmartFake
    implements _i3.ChatRepository {
  _FakeChatRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageGeneratorRepository_2 extends _i1.SmartFake
    implements _i4.ImageGeneratorRepository {
  _FakeImageGeneratorRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i3.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>> chatAPI(
          String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #chatAPI,
          [prompt],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>>.value(
                _FakeEither_0<_i6.Failure, List<_i7.Message>>(
          this,
          Invocation.method(
            #chatAPI,
            [prompt],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>>);
}

/// A class which mocks [ImageGeneratorRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageGeneratorRepository extends _i1.Mock
    implements _i4.ImageGeneratorRepository {
  MockImageGeneratorRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<String>>> imageGeneratorAPI(
          String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #imageGeneratorAPI,
          [prompt],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<String>>>.value(
            _FakeEither_0<_i6.Failure, List<String>>(
          this,
          Invocation.method(
            #imageGeneratorAPI,
            [prompt],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<String>>>);
}

/// A class which mocks [ChatDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatDatasource extends _i1.Mock implements _i8.ChatDatasource {
  MockChatDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i7.Message>> chatAPI(String? prompt) => (super.noSuchMethod(
        Invocation.method(
          #chatAPI,
          [prompt],
        ),
        returnValue: _i5.Future<List<_i7.Message>>.value(<_i7.Message>[]),
      ) as _i5.Future<List<_i7.Message>>);
}

/// A class which mocks [ImageGeneratorDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageGeneratorDatasource extends _i1.Mock
    implements _i9.ImageGeneratorDatasource {
  MockImageGeneratorDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<String>> imageGeneratorAPI(String? prompt) =>
      (super.noSuchMethod(
        Invocation.method(
          #imageGeneratorAPI,
          [prompt],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);
}

/// A class which mocks [SendMessage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendMessage extends _i1.Mock implements _i10.SendMessage {
  MockSendMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ChatRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeChatRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.ChatRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>> call(
          _i11.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>>.value(
                _FakeEither_0<_i6.Failure, List<_i7.Message>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Message>>>);
}

/// A class which mocks [GenerateImage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenerateImage extends _i1.Mock implements _i12.GenerateImage {
  MockGenerateImage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.ImageGeneratorRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeImageGeneratorRepository_2(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i4.ImageGeneratorRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<String>>> call(_i11.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, List<String>>>.value(
            _FakeEither_0<_i6.Failure, List<String>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<String>>>);
}
